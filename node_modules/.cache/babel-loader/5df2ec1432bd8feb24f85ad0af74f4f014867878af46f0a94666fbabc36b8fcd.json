{"ast":null,"code":"var _jsxFileName = \"/home/mints/Downloads/staff_management_system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Navbar from './components/Navbar';\nimport AdminPage from './pages/AdminPage';\nimport UserPage1 from './pages/UserPage1';\nimport UserPage2 from './pages/UserPage2';\nimport ForgotPassword from './pages/ForgotPassword';\nimport ForgotPasswordConfirm from './pages/ForgotPasswordConfirm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const location = useLocation();\n\n  // Determine whether to render the Navbar based on the current route\n  const shouldRenderNavbar = location.pathname !== '/Login' && location.pathname !== '/forgot-password';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [shouldRenderNavbar && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgot-password\",\n          element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgot-password-confirm\",\n          element: /*#__PURE__*/_jsxDEV(ForgotPasswordConfirm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user1\",\n          element: /*#__PURE__*/_jsxDEV(UserPage1, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user2\",\n          element: /*#__PURE__*/_jsxDEV(UserPage2, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","useLocation","Login","Navbar","AdminPage","UserPage1","UserPage2","ForgotPassword","ForgotPasswordConfirm","jsxDEV","_jsxDEV","App","_s","location","shouldRenderNavbar","pathname","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/mints/Downloads/staff_management_system/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes , useLocation} from 'react-router-dom';\nimport Login from './pages/Login';\nimport Navbar from './components/Navbar';\nimport AdminPage from './pages/AdminPage';\nimport UserPage1 from './pages/UserPage1';\nimport UserPage2 from './pages/UserPage2';\nimport ForgotPassword from './pages/ForgotPassword';\nimport ForgotPasswordConfirm from './pages/ForgotPasswordConfirm';\n\n\n\nfunction App() {\n\n  const location = useLocation();\n\n  // Determine whether to render the Navbar based on the current route\n  const shouldRenderNavbar = location.pathname !== '/Login' && location.pathname !== '/forgot-password';\n\n  \n  return (\n    <div className='App'>\n      <Router>\n        \n        {shouldRenderNavbar && <Navbar />}\n        <Routes>\n          \n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n          <Route path=\"/forgot-password-confirm\" element={<ForgotPasswordConfirm />} />\n          <Route path=\"/admin\" element={<AdminPage />} />\n          <Route path=\"/user1\" element={<UserPage1 />} />\n          <Route path=\"/user2\" element={<UserPage2 />} />\n        </Routes>\n        \n        \n      </Router>\n    </div>\n    \n  );\n};\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}