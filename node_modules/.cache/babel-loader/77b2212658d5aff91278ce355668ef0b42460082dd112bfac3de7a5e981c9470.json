{"ast":null,"code":"var _jsxFileName = \"/home/mints/Downloads/staff_management_system/src/pages/ForgotPasswordConfirm.jsx\",\n  _s = $RefreshSig$();\n// ForgotPasswordConfirm.js\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './ForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordConfirm = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [token, setToken] = useState('');\n  const [passwordChanged, setPasswordChanged] = useState(false);\n  const handleResetPassword = async () => {\n    try {\n      await axios.post('http://0.0.0.0:8888/auth/password_reset/confirm/', {\n        newPassword,\n        token\n      });\n      setPasswordChanged(true);\n    } catch (error) {\n      console.error('Error resetting password:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), !passwordChanged ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"string\",\n          value: token,\n          onChange: e => setToken(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remember-forgot\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your password has been successfully changed. You can now log in with your new password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \" Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPasswordConfirm, \"cuH4OlXRmz6eiHzf0TSOxz1s5Dc=\");\n_c = ForgotPasswordConfirm;\nexport default ForgotPasswordConfirm;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordConfirm\");","map":{"version":3,"names":["React","useState","useParams","axios","jsxDEV","_jsxDEV","ForgotPasswordConfirm","_s","newPassword","setNewPassword","token","setToken","passwordChanged","setPasswordChanged","handleResetPassword","post","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","className","href","_c","$RefreshReg$"],"sources":["/home/mints/Downloads/staff_management_system/src/pages/ForgotPasswordConfirm.jsx"],"sourcesContent":["// ForgotPasswordConfirm.js\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './ForgotPassword.css';\n\n\nconst ForgotPasswordConfirm = () => {\n  \n  const [newPassword, setNewPassword] = useState('');\n  const [token, setToken] = useState('');\n  const [passwordChanged, setPasswordChanged] = useState(false);\n\n  const handleResetPassword = async () => {\n    try {\n      await axios.post('http://0.0.0.0:8888/auth/password_reset/confirm/', {    \n        newPassword,\n        token,\n      });\n      setPasswordChanged(true);\n    } catch (error) {\n      console.error('Error resetting password:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Reset Password</h2>\n      {!passwordChanged ? (\n        <form>\n          <label>\n            New Password:\n            <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\n          </label>\n          \n          <label>\n            Token:\n            <input type=\"string\" value={token} onChange={(e) => setToken(e.target.value)} />\n          </label>\n          <button type=\"button\" onClick={handleResetPassword}>\n            Reset Password\n          </button>\n        </form>\n      ) : (\n        \n        <div className=\"remember-forgot\">\n            <p>Your password has been successfully changed. You can now log in with your new password.</p>\n            <a href='/'> Login Page</a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ForgotPasswordConfirm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}