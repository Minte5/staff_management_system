{"ast":null,"code":"var _jsxFileName = \"/home/mints/Downloads/staff_management_system/src/pages/AdminPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AdminPage.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [tokenExists, setTokenExists] = useState(true);\n  const navigate = useNavigate(); // Get the navigate function from react-router-dom\n\n  const fetchUsers = async () => {\n    try {\n      const storedTokenString = localStorage.getItem('token');\n      if (!storedTokenString) {\n        setTokenExists(false);\n        return;\n      }\n      const token = JSON.parse(storedTokenString);\n      console.log('Stored Token:', token);\n      const response = await axios.get('http://0.0.0.0:8888/users/', {\n        headers: {\n          Authorization: `Token ${token.key}`\n        }\n      });\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  useEffect(() => {\n    const storedTokenString = localStorage.getItem('token');\n    if (!storedTokenString) {\n      setTokenExists(false);\n    } else {\n      fetchUsers();\n    }\n  }, []); // Run this effect only once, on component mount\n\n  const handleMenuItemClick = async () => {\n    await fetchUsers();\n  };\n  if (!tokenExists) {\n    navigate('/'); // Redirect to the login page if token does not exist\n    return null; // Return null to prevent rendering the AdminPage component\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: handleMenuItemClick,\n          children: \"Menu Item 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Menu Item 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Menu Item 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the Admin Panel. You have access to administrative features.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.username, \" - \", user.email]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"vxScQpzIDbCOGv61m6xpqRuz6PE=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AdminPage","_s","users","setUsers","tokenExists","setTokenExists","navigate","fetchUsers","storedTokenString","localStorage","getItem","token","JSON","parse","console","log","response","get","headers","Authorization","key","data","error","handleMenuItemClick","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","user","username","email","id","_c","$RefreshReg$"],"sources":["/home/mints/Downloads/staff_management_system/src/pages/AdminPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AdminPage.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\n\nconst AdminPage = () => {\n  const [users, setUsers] = useState([]);\n  const [tokenExists, setTokenExists] = useState(true);\n  const navigate = useNavigate(); // Get the navigate function from react-router-dom\n\n  const fetchUsers = async () => {\n    try {\n      const storedTokenString = localStorage.getItem('token');\n      if (!storedTokenString) {\n        setTokenExists(false);\n        return;\n      }\n\n      const token = JSON.parse(storedTokenString);\n      console.log('Stored Token:', token);\n\n      const response = await axios.get('http://0.0.0.0:8888/users/', {\n        headers: {\n          Authorization: `Token ${token.key}` \n        }\n      });\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  useEffect(() => {\n    const storedTokenString = localStorage.getItem('token');\n    if (!storedTokenString) {\n      setTokenExists(false);\n    } else {\n      fetchUsers();\n    }\n  }, []); // Run this effect only once, on component mount\n\n  const handleMenuItemClick = async () => {\n    await fetchUsers();\n  };\n\n  if (!tokenExists) {\n    navigate('/'); // Redirect to the login page if token does not exist\n    return null; // Return null to prevent rendering the AdminPage component\n  }\n\n  return (\n    <div>\n      <div className=\"sidebar\">\n        <ul>\n          <li onClick={handleMenuItemClick}>Menu Item 1</li>\n          <li>\nMenu Item 2</li>\n          <li>Menu Item 3</li>\n        </ul>\n      </div>\n      <div>\n        <h2>Admin Panel</h2>\n        <p>Welcome to the Admin Panel. You have access to administrative features.</p>\n      </div>\n\n      <div>\n        <ul>\n          {users.map(user => (\n            <li key={user.id}>{user.username} - {user.email}</li> \n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}